{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/RVN/challenge/src/components/Information.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Information.css';\nimport Info from './Info';\nimport SectionHeader from './SectionHeader';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATA = gql`\n  query Info($ide: ID! )\n  {\n    person (id:$ide) {\n      eyeColor\n      hairColor\n      skinColor\n      birthYear\n      vehicleConnection{\n        vehicles{\n          name\n        }\n      }\n      \n    }\n  }\n\n`;\n\nconst Information = () => {\n  _s();\n\n  const ide = \"cGVvcGxlOjE=\";\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(DATA, {\n    variables: {\n      ide\n    }\n  }); //const {loading, error, data} = useQuery(DATA);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Something wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-information\",\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      label: \"General Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Info, {\n      label: \"Eye Color\",\n      data: data.person.eyeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Info, {\n      label: \"Hair Color\",\n      data: data.person.hairColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Info, {\n      label: \"Skin Color\",\n      data: data.person.skinColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Info, {\n      label: \"Birth Year\",\n      data: data.person.birthYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SectionHeader, {\n      label: \"Vehicles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), data.person.vehicleConnection.vehicles.map(vehicle => /*#__PURE__*/_jsxDEV(Info, {\n      label: vehicle.name,\n      data: ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 65\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Information, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Information;\nexport default Information;\n\nvar _c;\n\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"sources":["/home/luis/Desktop/RVN/challenge/src/components/Information.js"],"names":["React","Info","SectionHeader","useQuery","gql","DATA","Information","ide","loading","error","data","variables","person","eyeColor","hairColor","skinColor","birthYear","vehicleConnection","vehicles","map","vehicle","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AAEA,MAAMC,IAAI,GAAGD,GACZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;;AAoBA,MAAME,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,GAAG,GAAG,cAAZ;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBP,QAAQ,CAACE,IAAD,EAAM;AAACM,IAAAA,SAAS,EAAC;AAACJ,MAAAA;AAAD;AAAX,GAAN,CAAvC,CAHsB,CAItB;;AAEA,MAAGC,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGV,sBACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,WAAZ;AAAwB,MAAA,IAAI,EAAEC,IAAI,CAACE,MAAL,CAAYC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAEH,IAAI,CAACE,MAAL,CAAYE;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAEJ,IAAI,CAACE,MAAL,CAAYG;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAEL,IAAI,CAACE,MAAL,CAAYI;AAA3C;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YANJ,EAOKN,IAAI,CAACE,MAAL,CAAYK,iBAAZ,CAA8BC,QAA9B,CAAuCC,GAAvC,CAA4CC,OAAD,iBAAY,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,OAAO,CAACC,IAArB;AAA2B,MAAA,IAAI,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAvD,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAaH,CAvBD;;GAAMf,W;UAG6BH,Q;;;KAH7BG,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport './Information.css'\nimport Info from './Info'\nimport SectionHeader from './SectionHeader'\n\nimport {useQuery, gql} from '@apollo/client';\n\nconst DATA = gql \n`\n  query Info($ide: ID! )\n  {\n    person (id:$ide) {\n      eyeColor\n      hairColor\n      skinColor\n      birthYear\n      vehicleConnection{\n        vehicles{\n          name\n        }\n      }\n      \n    }\n  }\n\n`;\n\nconst Information = () => {\n\n    const ide = \"cGVvcGxlOjE=\"\n    const {loading, error, data} = useQuery(DATA,{variables:{ide},});\n    //const {loading, error, data} = useQuery(DATA);\n\n    if(loading) return <p>Loading..</p>\n    if(error) return <p>Something wrong</p>\n\n\n    return(\n    <div className=\"card-information\">\n        <SectionHeader label='General Information'/>\n        <Info label='Eye Color' data={data.person.eyeColor}/>\n        <Info label='Hair Color' data={data.person.hairColor}/>\n        <Info label='Skin Color' data={data.person.skinColor}/>\n        <Info label='Birth Year' data={data.person.birthYear}/>\n        <SectionHeader label='Vehicles'/>\n        {data.person.vehicleConnection.vehicles.map((vehicle)=>(<Info label={vehicle.name} data={''}/>))}\n    </div>\n        \n    )\n\n}\n\nexport default Information;"]},"metadata":{},"sourceType":"module"}