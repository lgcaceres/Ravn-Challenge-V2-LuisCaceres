{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/Rvn2/Ravn-Challenge-V2-LuisCaceres/src/components/People.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NoticeCell from './NoticeCell';\nimport LoadingCell from './LoadingCell';\nimport './People.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOMBRES = gql`\n  query Nombre($id : ID)\n  {\n    person (id:$id) {\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      \n    }\n  }\n\n`;\n\nconst People = ({\n  ide,\n  setSelectedId\n}) => {\n  _s();\n\n  const id = ide.id;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(NOMBRES, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingCell, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(NoticeCell, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n\n  const onButton = id => {\n    setSelectedId(id);\n  };\n\n  const race = data.person.species ? data.person.species.name : 'Human';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"people\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"people__name\",\n        children: data.person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"people__homeworld\",\n        children: [race, \" from \", data.person.homeworld.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => onButton(ide.id),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(People, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = People;\nexport default People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["/home/luis/Desktop/Rvn2/Ravn-Challenge-V2-LuisCaceres/src/components/People.js"],"names":["React","NoticeCell","LoadingCell","useQuery","gql","NOMBRES","People","ide","setSelectedId","id","loading","error","data","variables","onButton","race","person","species","name","homeworld"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,cAAP;AAEA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AAKA,MAAMC,OAAO,GAAGD,GACf;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,MAAME,MAAM,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAKC,EAAAA;AAAL,CAAD,KAAyB;AAAA;;AAEtC,QAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBT,QAAQ,CAACE,OAAD,EAAS;AAACQ,IAAAA,SAAS,EAAC;AAACJ,MAAAA;AAAD;AAAX,GAAT,CAAvC;AAEA,MAAGC,OAAH,EAAY,oBAAQ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAR;AACV,MAAGC,KAAH,EAAU,oBAAQ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UAAR;;AAEZ,QAAMG,QAAQ,GAAEL,EAAD,IAAM;AACnBD,IAAAA,aAAa,CAACC,EAAD,CAAb;AACD,GAFD;;AAIA,QAAMM,IAAI,GAAIH,IAAI,CAACI,MAAL,CAAYC,OAAb,GAAwBL,IAAI,CAACI,MAAL,CAAYC,OAAZ,CAAoBC,IAA5C,GAAmD,OAAhE;AAEE,sBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA,kBAA6BN,IAAI,CAACI,MAAL,CAAYE;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,mBAAkCH,IAAlC,YAA8CH,IAAI,CAACI,MAAL,CAAYG,SAAZ,CAAsBD,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,MAAIJ,QAAQ,CAACP,GAAG,CAACE,EAAL,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcH,CA5BD;;GAAMH,M;UAG2BH,Q;;;KAH3BG,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\nimport NoticeCell from './NoticeCell'\nimport LoadingCell from './LoadingCell'\n\nimport './People.css'\n\nimport {useQuery, gql} from '@apollo/client';\n\n\n\n\nconst NOMBRES = gql \n`\n  query Nombre($id : ID)\n  {\n    person (id:$id) {\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      \n    }\n  }\n\n`;\n\nconst People = ({ide,setSelectedId}) => {\n\n  const id = ide.id;\n  const {loading, error, data} = useQuery(NOMBRES,{variables:{id}});\n\n  if(loading) return (<LoadingCell/>)\n    if(error) return (<NoticeCell/>)\n  \n  const onButton=(id)=>{\n    setSelectedId(id);\n  }\n  \n  const race = (data.person.species) ? data.person.species.name : 'Human';\n\n    return(\n    <div className='people'>\n      <div>\n        <p className='people__name'>{data.person.name}</p>\n        <p className='people__homeworld'>{race} from {data.person.homeworld.name}</p>\n      </div>\n\n      <div>\n        <button className='button' onClick={()=>onButton(ide.id)}>&gt;</button>\n      </div>\n\n        \n    </div>)\n\n}\n\nexport default People;"]},"metadata":{},"sourceType":"module"}