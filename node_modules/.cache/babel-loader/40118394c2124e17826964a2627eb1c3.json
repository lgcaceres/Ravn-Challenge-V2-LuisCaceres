{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/RVN/challenge/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport People from './components/People';\nimport Information from './components/Information';\nimport './App.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PEOPLE = gql`\n  {\n    allPeople {\n      people{\n        id\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      }\n    }\n  }\n\n`;\n\nfunction App() {\n  _s();\n\n  const [selectedId, setSelectedId] = useState('cGVvcGxlOjE=');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PEOPLE);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Something wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Information, {\n      className: \"information\",\n      selectedId: selectedId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), data.allPeople.people.map((people, id) => /*#__PURE__*/_jsxDEV(People, {\n      className: \"people\",\n      data: people,\n      setSelectedId: setSelectedId\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4uBf0sbAGjVILexfRptGvhRDNvM=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/luis/Desktop/RVN/challenge/src/App.js"],"names":["React","useState","Header","People","Information","useQuery","gql","PEOPLE","App","selectedId","setSelectedId","loading","error","data","allPeople","people","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAyB,0BAAzB;AAEA,OAAO,WAAP;AAEA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AAEA,MAAMC,MAAM,GAAGD,GACd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;;AAqBA,SAASE,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,cAAD,CAA5C;AAEA,QAAM;AAACU,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBR,QAAQ,CAACE,MAAD,CAAvC;AACA,MAAGI,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGV,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAqC,MAAA,UAAU,EAAEH;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKI,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA0B,CAACD,MAAD,EAAQE,EAAR,kBACzB,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAoC,MAAA,IAAI,EAAEF,MAA1C;AAAkD,MAAA,aAAa,EAAEL;AAAjE,OAAgCO,EAAhC;AAAA;AAAA;AAAA;AAAA,YADD,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnBQT,G;UAIwBH,Q;;;KAJxBG,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport Header from './components/Header';\nimport People from './components/People';\nimport Information  from './components/Information'\n\nimport './App.css'\n\nimport {useQuery, gql} from '@apollo/client';\n\nconst PEOPLE = gql \n`\n  {\n    allPeople {\n      people{\n        id\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      }\n    }\n  }\n\n`\n\n\n\nfunction App() {\n\n  const [selectedId, setSelectedId] = useState('cGVvcGxlOjE=');\n\n  const {loading, error, data} = useQuery(PEOPLE);\n  if(loading) return <p>Loading..</p>\n  if(error) return <p>Something wrong</p>\n\n\n  return (\n    <div className='page'>\n        <Header className='header'/>\n        <Information className='information' selectedId={selectedId}/>\n        {data.allPeople.people.map((people,id)=>(\n          <People className='people' key={id} data={people} setSelectedId={setSelectedId}/>\n        ))}\n        \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}