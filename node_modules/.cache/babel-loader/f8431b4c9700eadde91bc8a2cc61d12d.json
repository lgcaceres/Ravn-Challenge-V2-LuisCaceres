{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/RVN/challenge/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header';\nimport People from './components/People';\nimport Information from './components/Information';\nimport './App.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PEOPLE = gql`\n  {\n    allPeople {\n      people{\n        id\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      }\n    }\n  }\n\n`;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ids: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(PEOPLE);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this);\n    this.setState({\n      ids: data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Information, {\n        className: \"information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), this.state.ids.allPeople.people.map((people, id) => /*#__PURE__*/_jsxDEV(People, {\n        className: \"people\",\n        data: people\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/luis/Desktop/RVN/challenge/src/App.js"],"names":["React","Header","People","Information","useQuery","gql","PEOPLE","App","Component","constructor","state","ids","componentDidMount","loading","error","data","setState","render","allPeople","people","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAyB,0BAAzB;AAEA,OAAO,WAAP;AAEA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AAEA,MAAMC,MAAM,GAAGD,GACd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;;AAqBA,MAAME,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAC;AAAL,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAAyBX,QAAQ,CAACE,MAAD,CAAvC;AACA,QAAGO,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACZ,QAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACV,SAAKE,QAAL,CAAc;AAACL,MAAAA,GAAG,EAACI;AAAL,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,KAAKP,KAAL,CAAWC,GAAX,CAAeO,SAAf,CAAyBC,MAAzB,CAAgCC,GAAhC,CAAoC,CAACD,MAAD,EAAQE,EAAR,kBACnC,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAoC,QAAA,IAAI,EAAEF;AAA1C,SAAgCE,EAAhC;AAAA;AAAA;AAAA;AAAA,cADD,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAzB+B;;AA8BlC,eAAed,GAAf","sourcesContent":["import React from 'react';\n\nimport Header from './components/Header';\nimport People from './components/People';\nimport Information  from './components/Information'\n\nimport './App.css'\n\nimport {useQuery, gql} from '@apollo/client';\n\nconst PEOPLE = gql \n`\n  {\n    allPeople {\n      people{\n        id\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      }\n    }\n  }\n\n`\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {ids:{}}\n  }\n\n  componentDidMount() {\n    const {loading, error, data} = useQuery(PEOPLE);\n    if(loading) return <p>Loading..</p>\n    if(error) return <p>Something wrong</p>\n    this.setState({ids:data})\n  }\n  \n  render(){\n    return (\n      <div className='page'>\n          <Header className='header'/>\n          <Information className='information'/>\n          {this.state.ids.allPeople.people.map((people,id)=>(\n            <People className='people' key={id} data={people}/>\n          ))}\n          \n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}