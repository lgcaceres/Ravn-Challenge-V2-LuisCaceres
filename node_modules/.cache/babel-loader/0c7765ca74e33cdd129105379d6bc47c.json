{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/RVN/challenge/src/components/People.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './People.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst People = props => {\n  _s();\n\n  const DATA = gql`\n  {\n    person ($identificador:id!) {\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      \n    }\n  }\n\n`;\n  const {\n    data\n  } = useQuery(DATA, {\n    variables: {\n      id: \"cGVvcGxlOjY=\"\n    }\n  }); //if(loading) return <p>Loading..</p>\n  //if(error) return <p>Something wrong</p>\n\n  const race = props.data.species ? props.data.species.name : 'Human';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"people\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"people__name\",\n      children: props.data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"people__homeworld\",\n      children: [race, \" from \", props.data.homeworld.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(People, \"wDefygpsWBVTl/fEL2emlq2/574=\", false, function () {\n  return [useQuery];\n});\n\n_c = People;\nexport default People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["/home/luis/Desktop/RVN/challenge/src/components/People.js"],"names":["React","useQuery","gql","People","props","DATA","data","variables","id","race","species","name","homeworld"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AAEA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAMC,IAAI,GAAGH,GACZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAmBI,QAAM;AAACI,IAAAA;AAAD,MAASL,QAAQ,CAACI,IAAD,EAAM;AAACE,IAAAA,SAAS,EAAC;AAACC,MAAAA,EAAE,EAAC;AAAJ;AAAX,GAAN,CAAvB,CArBsB,CAsBtB;AACA;;AAEA,QAAMC,IAAI,GAAIL,KAAK,CAACE,IAAN,CAAWI,OAAZ,GAAuBN,KAAK,CAACE,IAAN,CAAWI,OAAX,CAAmBC,IAA1C,GAAiD,OAA9D;AAEA,sBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA,gBAA6BP,KAAK,CAACE,IAAN,CAAWK;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA,iBAAkCF,IAAlC,YAA8CL,KAAK,CAACE,IAAN,CAAWM,SAAX,CAAqBD,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CAjCD;;GAAMR,M;UAqBaF,Q;;;KArBbE,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\nimport './People.css'\n\nimport {useQuery, gql} from '@apollo/client';\n\n\nconst People = (props) => {\n\nconst DATA = gql \n`\n  {\n    person ($identificador:id!) {\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      \n    }\n  }\n\n`\n\n\n\n    const {data} = useQuery(DATA,{variables:{id:\"cGVvcGxlOjY=\" },});\n    //if(loading) return <p>Loading..</p>\n    //if(error) return <p>Something wrong</p>\n\n    const race = (props.data.species) ? props.data.species.name : 'Human';\n\n    return(\n    <div className='people'>\n        <p className='people__name'>{props.data.name}</p>\n        <p className='people__homeworld'>{race} from {props.data.homeworld.name}</p>\n    </div>)\n\n}\n\nexport default People;"]},"metadata":{},"sourceType":"module"}