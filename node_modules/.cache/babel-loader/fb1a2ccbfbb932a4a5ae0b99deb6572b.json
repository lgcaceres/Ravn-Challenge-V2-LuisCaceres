{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/RVN/challenge/src/components/Information.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATA = gql`\n  query Info($ide: ID! )\n  {\n    person (id:$ide) {\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      \n    }\n  }\n\n`;\n\nconst Information = () => {\n  _s();\n\n  const ide = \"cGVvcGxlOjY=\";\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(DATA, {\n    variables: {\n      ide\n    }\n  }); //const {loading, error, data} = useQuery(DATA);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Something wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [data.person.name, \" from \", data.person.homeworld.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Information, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Information;\nexport default Information;\n\nvar _c;\n\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"sources":["/home/luis/Desktop/RVN/challenge/src/components/Information.js"],"names":["React","useQuery","gql","DATA","Information","ide","loading","error","data","variables","person","name","homeworld"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AAEA,MAAMC,IAAI,GAAGD,GACZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,MAAME,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,GAAG,GAAG,cAAZ;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBP,QAAQ,CAACE,IAAD,EAAM;AAACM,IAAAA,SAAS,EAAC;AAACJ,MAAAA;AAAD;AAAX,GAAN,CAAvC,CAHsB,CAItB;;AAEA,MAAGC,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGV,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBAAKC,IAAI,CAACE,MAAL,CAAYC,IAAjB,YAA6BH,IAAI,CAACE,MAAL,CAAYE,SAAZ,CAAsBD,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CAhBD;;GAAMP,W;UAG6BH,Q;;;KAH7BG,W;AAkBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\n\n\nimport {useQuery, gql} from '@apollo/client';\n\nconst DATA = gql \n`\n  query Info($ide: ID! )\n  {\n    person (id:$ide) {\n        name\n        homeworld{\n          name\n        }\n        species{\n          name\n        }\n      \n    }\n  }\n\n`;\n\nconst Information = () => {\n\n    const ide = \"cGVvcGxlOjY=\"\n    const {loading, error, data} = useQuery(DATA,{variables:{ide},});\n    //const {loading, error, data} = useQuery(DATA);\n\n    if(loading) return <p>Loading..</p>\n    if(error) return <p>Something wrong</p>\n\n\n    return(\n    <div >\n        <p >Information</p>\n        <p >{data.person.name} from {data.person.homeworld.name}</p>\n    </div>)\n\n}\n\nexport default Information;"]},"metadata":{},"sourceType":"module"}